plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    implementation "javazoom:jlayer:1.0.1"
    shadowBundle "javazoom:jlayer:1.0.1"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mod_name', project.rootProject.mod_name
    inputs.property 'mod_description', project.rootProject.mod_description
    inputs.property 'mod_authors', project.rootProject.mod_authors
    inputs.property 'fabric_loader_version', project.rootProject.fabric_loader_version
    inputs.property 'archives_name', project.rootProject.archives_name
    inputs.property 'minecraft_version', project.rootProject.minecraft_version
    inputs.property 'architectury_api_version', project.rootProject.architectury_api_version

    filesMatching('fabric.mod.json') {
        expand version: project.version, mod_name: project.rootProject.mod_name, mod_description: project.rootProject.mod_description, mod_authors: project.rootProject.mod_authors, fabric_loader_version: project.rootProject.fabric_loader_version, archives_name: project.rootProject.archives_name, minecraft_version: project.rootProject.minecraft_version, architectury_api_version: project.rootProject.architectury_api_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
